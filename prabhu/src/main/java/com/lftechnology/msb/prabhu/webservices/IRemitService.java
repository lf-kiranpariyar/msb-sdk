package com.lftechnology.msb.prabhu.webservices;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * WebService
 * <p>
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "iRemitService", targetNamespace = "WebServices")
public class IRemitService
        extends Service {

    private final static URL IREMITSERVICE_WSDL_LOCATION;
    private final static WebServiceException IREMITSERVICE_EXCEPTION;
    private final static QName IREMITSERVICE_QNAME = new QName("WebServices", "iRemitService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            String wsdlFileLoation = "file:/home/eyeshield/Desktop/prabhu/txnservice.xml";
            if (wsdlFileLoation == null) {
                wsdlFileLoation = System.getenv("WSDL_FILE_LOCATION");
            }
            url = new URL(wsdlFileLoation);
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        IREMITSERVICE_WSDL_LOCATION = url;
        IREMITSERVICE_EXCEPTION = e;
    }

    public IRemitService() {
        super(__getWsdlLocation(), IREMITSERVICE_QNAME);
    }

    public IRemitService(WebServiceFeature... features) {
        super(__getWsdlLocation(), IREMITSERVICE_QNAME, features);
    }

    public IRemitService(URL wsdlLocation) {
        super(wsdlLocation, IREMITSERVICE_QNAME);
    }

    public IRemitService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, IREMITSERVICE_QNAME, features);
    }

    public IRemitService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public IRemitService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    private static URL __getWsdlLocation() {
        if (IREMITSERVICE_EXCEPTION != null) {
            throw IREMITSERVICE_EXCEPTION;
        }
        return IREMITSERVICE_WSDL_LOCATION;
    }

    /**
     * @return returns IRemitServiceSoap
     */
    @WebEndpoint(name = "iRemitServiceSoap")
    public IRemitServiceSoap getIRemitServiceSoap() {
        return super.getPort(new QName("WebServices", "iRemitServiceSoap"), IRemitServiceSoap.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns IRemitServiceSoap
     */
    @WebEndpoint(name = "iRemitServiceSoap")
    public IRemitServiceSoap getIRemitServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("WebServices", "iRemitServiceSoap"), IRemitServiceSoap.class, features);
    }

}
