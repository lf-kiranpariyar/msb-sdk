package com.lftechnology.msb.prabhu.webservices;

import com.lftechnology.msb.prabhu.web.services.ReturnCardValid;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebService(name = "iRemitServiceSoap", targetNamespace = "WebServices")
@XmlSeeAlso({
        com.lftechnology.msb.prabhu.web.services.ObjectFactory.class,
        com.lftechnology.msb.prabhu.webservices.ObjectFactory.class
})
public interface IRemitServiceSoap {


    /**
     * @param agentCODE
     * @param password
     * @param paymentmode
     * @param payoutCOUNTRY
     * @param promotionalCODE
     * @param transferamount
     * @param calcBY
     * @param locationID
     * @param agentSESSIONID
     * @param waiveFEE
     * @param userID
     * @return returns webservices.ReturnFOREX
     */
    @WebMethod(operationName = "GetEXRate", action = "WebServices/GetEXRate")
    @WebResult(name = "GetEXRateResult", targetNamespace = "WebServices")
    @RequestWrapper(localName = "GetEXRate", targetNamespace = "WebServices", className = "webservices.GetEXRate")
    @ResponseWrapper(localName = "GetEXRateResponse", targetNamespace = "WebServices", className = "webservices.GetEXRateResponse")
    public ReturnFOREX getEXRate(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID,
            @WebParam(name = "TRANSFERAMOUNT", targetNamespace = "WebServices")
                    String transferamount,
            @WebParam(name = "PAYMENTMODE", targetNamespace = "WebServices")
                    String paymentmode,
            @WebParam(name = "CALC_BY", targetNamespace = "WebServices")
                    String calcBY,
            @WebParam(name = "LOCATION_ID", targetNamespace = "WebServices")
                    String locationID,
            @WebParam(name = "PAYOUT_COUNTRY", targetNamespace = "WebServices")
                    String payoutCOUNTRY,
            @WebParam(name = "WAIVE_FEE", targetNamespace = "WebServices")
                    String waiveFEE,
            @WebParam(name = "PROMOTIONAL_CODE", targetNamespace = "WebServices")
                    String promotionalCODE);

    /**
     * @param agentCODE
     * @param password
     * @param agentSESSIONID
     * @param agentTXNID
     * @param userID
     * @param pinno
     * @return returns webservices.ReturnTXNStatus
     */
    @WebMethod(operationName = "QueryTXNStatus", action = "WebServices/QueryTXNStatus")
    @WebResult(name = "QueryTXNStatusResult", targetNamespace = "WebServices")
    @RequestWrapper(localName = "QueryTXNStatus", targetNamespace = "WebServices", className = "webservices.QueryTXNStatus")
    @ResponseWrapper(localName = "QueryTXNStatusResponse", targetNamespace = "WebServices", className = "webservices.QueryTXNStatusResponse")
    public ReturnTXNStatus queryTXNStatus(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "PINNO", targetNamespace = "WebServices")
                    String pinno,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID,
            @WebParam(name = "AGENT_TXNID", targetNamespace = "WebServices")
                    String agentTXNID);

    /**
     * @param bankACCOUNTNUMBER
     * @param receiverNAME
     * @param senderDATEOFBIRTH
     * @param transferamount
     * @param userID
     * @param senderCITY
     * @param receiverADDRESS
     * @param bankBRANCHID
     * @param senderSOCIALSECURITYNUMBER
     * @param password
     * @param bankid
     * @param paymentmode
     * @param authorizedREQUIRED
     * @param calcBY
     * @param customerRATE
     * @param agentSESSIONID
     * @param senderBENEFICIARYRELATIONSHIP
     * @param waiveFEE
     * @param agentTXNID
     * @param senderMOBILE
     * @param receiverCOUNTRY
     * @param agentCODE
     * @param senderIDNUMBER
     * @param promotionalCODE
     * @param senderSOURCEOFFUND
     * @param receiverCONTACTNUMBER
     * @param senderIDTYPE
     * @param receiverCITY
     * @param senderCOUNTRY
     * @param senderADDRESS
     * @param senderNAME
     * @param senderOCCUPATION
     * @param locationID
     * @param senderIDISSUEDATE
     * @param senderIDEXPIREDATE
     * @param bankBRANCHNAME
     * @param purposeOFREMITTANCE
     * @return returns webservices.ReturnCreateTXN
     */
    @WebMethod(operationName = "SendTransaction", action = "WebServices/SendTransaction")
    @WebResult(name = "SendTransactionResult", targetNamespace = "WebServices")
    @RequestWrapper(localName = "SendTransaction", targetNamespace = "WebServices", className = "webservices.SendTransaction")
    @ResponseWrapper(localName = "SendTransactionResponse", targetNamespace = "WebServices", className = "webservices.SendTransactionResponse")
    public ReturnCreateTXN sendTransaction(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID,
            @WebParam(name = "AGENT_TXNID", targetNamespace = "WebServices")
                    String agentTXNID,
            @WebParam(name = "LOCATION_ID", targetNamespace = "WebServices")
                    String locationID,
            @WebParam(name = "SENDER_NAME", targetNamespace = "WebServices")
                    String senderNAME,
            @WebParam(name = "SENDER_ADDRESS", targetNamespace = "WebServices")
                    String senderADDRESS,
            @WebParam(name = "SENDER_MOBILE", targetNamespace = "WebServices")
                    String senderMOBILE,
            @WebParam(name = "SENDER_CITY", targetNamespace = "WebServices")
                    String senderCITY,
            @WebParam(name = "SENDER_COUNTRY", targetNamespace = "WebServices")
                    String senderCOUNTRY,
            @WebParam(name = "SENDER_ID_TYPE", targetNamespace = "WebServices")
                    String senderIDTYPE,
            @WebParam(name = "SENDER_ID_NUMBER", targetNamespace = "WebServices")
                    String senderIDNUMBER,
            @WebParam(name = "SENDER_ID_ISSUE_DATE", targetNamespace = "WebServices")
                    String senderIDISSUEDATE,
            @WebParam(name = "SENDER_ID_EXPIRE_DATE", targetNamespace = "WebServices")
                    String senderIDEXPIREDATE,
            @WebParam(name = "SENDER_DATE_OF_BIRTH", targetNamespace = "WebServices")
                    String senderDATEOFBIRTH,
            @WebParam(name = "RECEIVER_NAME", targetNamespace = "WebServices")
                    String receiverNAME,
            @WebParam(name = "RECEIVER_ADDRESS", targetNamespace = "WebServices")
                    String receiverADDRESS,
            @WebParam(name = "RECEIVER_CONTACT_NUMBER", targetNamespace = "WebServices")
                    String receiverCONTACTNUMBER,
            @WebParam(name = "RECEIVER_CITY", targetNamespace = "WebServices")
                    String receiverCITY,
            @WebParam(name = "RECEIVER_COUNTRY", targetNamespace = "WebServices")
                    String receiverCOUNTRY,
            @WebParam(name = "TRANSFERAMOUNT", targetNamespace = "WebServices")
                    String transferamount,
            @WebParam(name = "PAYMENTMODE", targetNamespace = "WebServices")
                    String paymentmode,
            @WebParam(name = "BANKID", targetNamespace = "WebServices")
                    String bankid,
            @WebParam(name = "BANK_ACCOUNT_NUMBER", targetNamespace = "WebServices")
                    String bankACCOUNTNUMBER,
            @WebParam(name = "CALC_BY", targetNamespace = "WebServices")
                    String calcBY,
            @WebParam(name = "AUTHORIZED_REQUIRED", targetNamespace = "WebServices")
                    String authorizedREQUIRED,
            @WebParam(name = "BANK_BRANCH_NAME", targetNamespace = "WebServices")
                    String bankBRANCHNAME,
            @WebParam(name = "BANK_BRANCHID", targetNamespace = "WebServices")
                    String bankBRANCHID,
            @WebParam(name = "SENDER_OCCUPATION", targetNamespace = "WebServices")
                    String senderOCCUPATION,
            @WebParam(name = "SENDER_SOURCE_OF_FUND", targetNamespace = "WebServices")
                    String senderSOURCEOFFUND,
            @WebParam(name = "SENDER_BENEFICIARY_RELATIONSHIP", targetNamespace = "WebServices")
                    String senderBENEFICIARYRELATIONSHIP,
            @WebParam(name = "PURPOSE_OF_REMITTANCE", targetNamespace = "WebServices")
                    String purposeOFREMITTANCE,
            @WebParam(name = "WAIVE_FEE", targetNamespace = "WebServices")
                    String waiveFEE,
            @WebParam(name = "PROMOTIONAL_CODE", targetNamespace = "WebServices")
                    String promotionalCODE,
            @WebParam(name = "SENDER_SOCIAL_SECURITY_NUMBER", targetNamespace = "WebServices")
                    String senderSOCIALSECURITYNUMBER,
            @WebParam(name = "CUSTOMER_RATE", targetNamespace = "WebServices")
                    String customerRATE);

    /**
     * @param agentCODE
     * @param password
     * @param agentSESSIONID
     * @param userID
     * @param pinno
     * @return returns webservices.ReturnTXNAuth
     */
    @WebMethod(operationName = "Authorized_Confirmed", action = "WebServices/Authorized_Confirmed")
    @WebResult(name = "Authorized_ConfirmedResult", targetNamespace = "WebServices")
    @RequestWrapper(localName = "Authorized_Confirmed", targetNamespace = "WebServices", className = "webservices.AuthorizedConfirmed")
    @ResponseWrapper(localName = "Authorized_ConfirmedResponse", targetNamespace = "WebServices", className = "webservices.AuthorizedConfirmedResponse")
    public ReturnTXNAuth authorizedConfirmed(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "PINNO", targetNamespace = "WebServices")
                    String pinno,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID);

    /**
     * @param agentCODE
     * @param password
     * @param agentSESSIONID
     * @param userID
     * @param pinno
     * @param cancelREASON
     * @return returns webservices.ReturnTXNCancel
     */
    @WebMethod(operationName = "CancelTransactionv2", action = "WebServices/CancelTransactionv2")
    @WebResult(name = "CancelTransactionv2Result", targetNamespace = "WebServices")
    @RequestWrapper(localName = "CancelTransactionv2", targetNamespace = "WebServices", className = "webservices.CancelTransactionv2")
    @ResponseWrapper(localName = "CancelTransactionv2Response", targetNamespace = "WebServices", className = "webservices.CancelTransactionv2Response")
    public ReturnTXNCancel cancelTransactionv2(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "PINNO", targetNamespace = "WebServices")
                    String pinno,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID,
            @WebParam(name = "CANCEL_REASON", targetNamespace = "WebServices")
                    String cancelREASON);

    /**
     * @param agentCODE
     * @param password
     * @param agentSESSIONID
     * @param userID
     * @param pinno
     * @param cancelREASON
     * @return returns webservices.ReturnCreateTXN
     */
    @WebMethod(operationName = "CancelTransaction", action = "WebServices/CancelTransaction")
    @WebResult(name = "CancelTransactionResult", targetNamespace = "WebServices")
    @RequestWrapper(localName = "CancelTransaction", targetNamespace = "WebServices", className = "webservices.CancelTransaction")
    @ResponseWrapper(localName = "CancelTransactionResponse", targetNamespace = "WebServices", className = "webservices.CancelTransactionResponse")
    public ReturnCreateTXN cancelTransaction(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "PINNO", targetNamespace = "WebServices")
                    String pinno,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID,
            @WebParam(name = "CANCEL_REASON", targetNamespace = "WebServices")
                    String cancelREASON);

    /**
     * @param agentCODE
     * @param password
     * @param payoutCOUNTRY
     * @param bankBRANCHSTATE
     * @param agentSESSIONID
     * @param bankNAME
     * @param userID
     * @param paymenttype
     * @return returns webservices.ArrayOfReturnAGENTLIST
     */
    @WebMethod(operationName = "GetAgentList", action = "WebServices/GetAgentList")
    @WebResult(name = "GetAgentListResult", targetNamespace = "WebServices")
    @RequestWrapper(localName = "GetAgentList", targetNamespace = "WebServices", className = "webservices.GetAgentList")
    @ResponseWrapper(localName = "GetAgentListResponse", targetNamespace = "WebServices", className = "webservices.GetAgentListResponse")
    public ArrayOfReturnAGENTLIST getAgentList(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID,
            @WebParam(name = "PAYMENTTYPE", targetNamespace = "WebServices")
                    String paymenttype,
            @WebParam(name = "PAYOUT_COUNTRY", targetNamespace = "WebServices")
                    String payoutCOUNTRY,
            @WebParam(name = "BANK_NAME", targetNamespace = "WebServices")
                    String bankNAME,
            @WebParam(name = "BANK_BRANCHSTATE", targetNamespace = "WebServices")
                    String bankBRANCHSTATE);

    /**
     * @param reportTYPE
     * @param fromDATE
     * @param agentCODE
     * @param password
     * @param toDATETIME
     * @param toDATE
     * @param agentSESSIONID
     * @param userID
     * @param showINCREMENTAL
     * @param fromDATETIME
     * @return returns webservices.ArrayOfReturnTRANSREPORT
     */
    @WebMethod(operationName = "ReconcileReport", action = "WebServices/ReconcileReport")
    @WebResult(name = "ReconcileReportResult", targetNamespace = "WebServices")
    @RequestWrapper(localName = "ReconcileReport", targetNamespace = "WebServices", className = "webservices.ReconcileReport")
    @ResponseWrapper(localName = "ReconcileReportResponse", targetNamespace = "WebServices", className = "webservices.ReconcileReportResponse")
    public ArrayOfReturnTRANSREPORT reconcileReport(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID,
            @WebParam(name = "REPORT_TYPE", targetNamespace = "WebServices")
                    String reportTYPE,
            @WebParam(name = "FROM_DATE", targetNamespace = "WebServices")
                    String fromDATE,
            @WebParam(name = "FROM_DATE_TIME", targetNamespace = "WebServices")
                    String fromDATETIME,
            @WebParam(name = "TO_DATE", targetNamespace = "WebServices")
                    String toDATE,
            @WebParam(name = "TO_DATE_TIME", targetNamespace = "WebServices")
                    String toDATETIME,
            @WebParam(name = "SHOW_INCREMENTAL", targetNamespace = "WebServices")
                    String showINCREMENTAL);

    /**
     * @param fromDATE
     * @param agentCODE
     * @param password
     * @param toDATE
     * @param agentSESSIONID
     * @param userID
     * @param showINCREMENTAL
     * @return returns webservices.ArrayOfReturnNotification
     */
    @WebMethod(operationName = "NotificationStatus", action = "WebServices/NotificationStatus")
    @WebResult(name = "NotificationStatusResult", targetNamespace = "WebServices")
    @RequestWrapper(localName = "NotificationStatus", targetNamespace = "WebServices", className = "webservices.NotificationStatus")
    @ResponseWrapper(localName = "NotificationStatusResponse", targetNamespace = "WebServices", className = "webservices.NotificationStatusResponse")
    public ArrayOfReturnNotification notificationStatus(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID,
            @WebParam(name = "FROM_DATE", targetNamespace = "WebServices")
                    String fromDATE,
            @WebParam(name = "TO_DATE", targetNamespace = "WebServices")
                    String toDATE,
            @WebParam(name = "SHOW_INCREMENTAL", targetNamespace = "WebServices")
                    String showINCREMENTAL);

    /**
     * @param agentCODE
     * @param password
     * @param agentSESSIONID
     * @param notificationID
     * @param userID
     * @return returns webservices.ReturnNotificationStatus
     */
    @WebMethod(operationName = "NotificationReceived", action = "WebServices/NotificationReceived")
    @WebResult(name = "NotificationReceivedResult", targetNamespace = "WebServices")
    @RequestWrapper(localName = "NotificationReceived", targetNamespace = "WebServices", className = "webservices.NotificationReceived")
    @ResponseWrapper(localName = "NotificationReceivedResponse", targetNamespace = "WebServices", className = "webservices.NotificationReceivedResponse")
    public ReturnNotificationStatus notificationReceived(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "NOTIFICATION_ID", targetNamespace = "WebServices")
                    String notificationID,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID);

    /**
     * @param agentCODE
     * @param password
     * @param amendmentVALUE
     * @param agentSESSIONID
     * @param amendmentFIELD
     * @param userID
     * @param pinno
     * @return returns webservices.ReturnTXNAMEND
     */
    @WebMethod(operationName = "AmendmentRequest", action = "WebServices/AmendmentRequest")
    @WebResult(name = "AmendmentRequestResult", targetNamespace = "WebServices")
    @RequestWrapper(localName = "AmendmentRequest", targetNamespace = "WebServices", className = "webservices.AmendmentRequest")
    @ResponseWrapper(localName = "AmendmentRequestResponse", targetNamespace = "WebServices", className = "webservices.AmendmentRequestResponse")
    public ReturnTXNAMEND amendmentRequest(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID,
            @WebParam(name = "PINNO", targetNamespace = "WebServices")
                    String pinno,
            @WebParam(name = "AMENDMENT_FIELD", targetNamespace = "WebServices")
                    String amendmentFIELD,
            @WebParam(name = "AMENDMENT_VALUE", targetNamespace = "WebServices")
                    String amendmentVALUE);

    /**
     * @param agentCODE
     * @param password
     * @param payoutCOUNTRY
     * @param agentSESSIONID
     * @param userID
     * @return returns webservices.ArrayOfReturnExCountry
     */
    @WebMethod(operationName = "GetCountryWiseRate", action = "WebServices/GetCountryWiseRate")
    @WebResult(name = "GetCountryWiseRateResult", targetNamespace = "WebServices")
    @RequestWrapper(localName = "GetCountryWiseRate", targetNamespace = "WebServices", className = "webservices.GetCountryWiseRate")
    @ResponseWrapper(localName = "GetCountryWiseRateResponse", targetNamespace = "WebServices", className = "webservices.GetCountryWiseRateResponse")
    public ArrayOfReturnExCountry getCountryWiseRate(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID,
            @WebParam(name = "PAYOUT_COUNTRY", targetNamespace = "WebServices")
                    String payoutCOUNTRY);

    /**
     * @param agentCODE
     * @param password
     * @param agentSESSIONID
     * @param userID
     * @param cardNO
     * @return returns web.services.ReturnCardValid
     */
    @WebMethod(operationName = "RemittanceCardValidate", action = "WebServices/RemittanceCardValidate")
    @WebResult(name = "RemittanceCardValidateResult", targetNamespace = "WebServices")
    @RequestWrapper(localName = "RemittanceCardValidate", targetNamespace = "WebServices", className = "webservices.RemittanceCardValidate")
    @ResponseWrapper(localName = "RemittanceCardValidateResponse", targetNamespace = "WebServices", className = "webservices.RemittanceCardValidateResponse")
    public ReturnCardValid remittanceCardValidate(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID,
            @WebParam(name = "CARD_NO", targetNamespace = "WebServices")
                    String cardNO);

    /**
     * @param agentCODE
     * @param password
     * @param additionalVALUE1
     * @param searchBY
     * @param agentSESSIONID
     * @param searchVALUE
     * @param userID
     * @return returns webservices.ReturnAccountValidV2
     */
    @WebMethod(operationName = "AccountValidate", action = "WebServices/AccountValidate")
    @WebResult(name = "AccountValidateResult", targetNamespace = "WebServices")
    @RequestWrapper(localName = "AccountValidate", targetNamespace = "WebServices", className = "webservices.AccountValidate")
    @ResponseWrapper(localName = "AccountValidateResponse", targetNamespace = "WebServices", className = "webservices.AccountValidateResponse")
    public ReturnAccountValidV2 accountValidate(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID,
            @WebParam(name = "SEARCH_BY", targetNamespace = "WebServices")
                    String searchBY,
            @WebParam(name = "SEARCH_VALUE", targetNamespace = "WebServices")
                    String searchVALUE,
            @WebParam(name = "ADDITIONAL_VALUE1", targetNamespace = "WebServices")
                    String additionalVALUE1);

    /**
     * @param agentCODE
     * @param password
     * @param agentSESSIONID
     * @param userID
     * @return returns webservices.ReturnCHECKBALANCE
     */
    @WebMethod(operationName = "CheckBalance", action = "WebServices/CheckBalance")
    @WebResult(name = "CheckBalanceResult", targetNamespace = "WebServices")
    @RequestWrapper(localName = "CheckBalance", targetNamespace = "WebServices", className = "webservices.CheckBalance")
    @ResponseWrapper(localName = "CheckBalanceResponse", targetNamespace = "WebServices", className = "webservices.CheckBalanceResponse")
    public ReturnCHECKBALANCE checkBalance(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID);

    /**
     * @param agentCODE
     * @param password
     * @param agentSESSIONID
     * @param userID
     * @param pinno
     * @return returns webservices.ArrayOfReturnTransactionLog
     */
    @WebMethod(operationName = "GetTransactionLog", action = "WebServices/GetTransactionLog")
    @WebResult(name = "GetTransactionLogResult", targetNamespace = "WebServices")
    @RequestWrapper(localName = "GetTransactionLog", targetNamespace = "WebServices", className = "webservices.GetTransactionLog")
    @ResponseWrapper(localName = "GetTransactionLogResponse", targetNamespace = "WebServices", className = "webservices.GetTransactionLogResponse")
    public ArrayOfReturnTransactionLog getTransactionLog(
            @WebParam(name = "AGENT_CODE", targetNamespace = "WebServices")
                    String agentCODE,
            @WebParam(name = "USER_ID", targetNamespace = "WebServices")
                    String userID,
            @WebParam(name = "PASSWORD", targetNamespace = "WebServices")
                    String password,
            @WebParam(name = "AGENT_SESSION_ID", targetNamespace = "WebServices")
                    String agentSESSIONID,
            @WebParam(name = "PINNO", targetNamespace = "WebServices")
                    String pinno);

}
